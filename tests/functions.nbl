include 'helpers.nbl';

fn double(n: int): int => n * 2;
assert(double(10) == 20);
assertFails(fn () => double('10'));

assertFails(fn () {
    fn double(n: int): string => n * 2;
    double(10);
});

class User {
    fn constructor(username) {
        this.username = username;
    }
}
const users = [
    User('bplaat'),
    User('jan')
];
assert(users.map(fn (user) => user.username)[0] == 'bplaat');

fn sum() {
    let sum: int = 0;
    for (let i: int = 0; i < arguments.length(); i++) {
        sum += (int)arguments[i];
    }
    return sum;
}
assert(sum(1, 2, '3', '4', '5') == 15);

fn doubleCallback(callback: function): int {
    return callback() * 2;
}
assert(doubleCallback(fn () => 10) == 20);
